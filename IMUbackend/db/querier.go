// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// img CRUD
	// img C
	CreateImg(ctx context.Context, name string) (uuid.UUID, error)
	// Defines queries for a data unit that must maintain transactional consistency.
	// RESOURCES: markdown, img, markdown_img_rel
	// markdown CRUD
	// markdown C
	CreateMarkdown(ctx context.Context, arg CreateMarkdownParams) (uuid.UUID, error)
	// md_img_rel CRUD
	// md_img_rel C
	CreateMarkdownImgRel(ctx context.Context, arg CreateMarkdownImgRelParams) error
	// student CRUD
	// student C
	CreateStudent(ctx context.Context, arg CreateStudentParams) (string, error)
	// img D
	DeleteImg(ctx context.Context, id uuid.UUID) error
	// markdown D
	DeleteMarkdown(ctx context.Context, id uuid.UUID) error
	// md_img_rel D
	DeleteMarkdownImgRel(ctx context.Context, arg DeleteMarkdownImgRelParams) error
	// md_img_rel D
	DeleteMarkdownImgRelByMarkdownID(ctx context.Context, markdownID uuid.UUID) error
	// student D
	DeleteStudent(ctx context.Context, id string) error
	//- md, img, md_img_rel R
	FindImages(ctx context.Context, markdownID uuid.UUID) ([]uuid.UUID, error)
	// img R
	FindImgByID(ctx context.Context, id uuid.UUID) (Img, error)
	// markdown R
	FindMarkdownByID(ctx context.Context, id uuid.UUID) (Markdown, error)
	// md_img_rel R
	FindMarkdownImgRelByMarkdownID(ctx context.Context, markdownID uuid.UUID) ([]MarkdownImgRel, error)
	FindStudentByEmail(ctx context.Context, email string) (Student, error)
	// student R
	FindStudentByID(ctx context.Context, id string) (Student, error)
	GetArticle(ctx context.Context, id uuid.UUID) ([]GetArticleRow, error)
	ListMarkdown(ctx context.Context) ([]ListMarkdownRow, error)
	ListMarkdownID(ctx context.Context) ([]uuid.UUID, error)
	Login(ctx context.Context, arg LoginParams) (int64, error)
	// img U
	UpdateImg(ctx context.Context, arg UpdateImgParams) error
	// markdown U
	UpdateMarkdown(ctx context.Context, arg UpdateMarkdownParams) error
	UpdateStudentBio(ctx context.Context, arg UpdateStudentBioParams) error
	// student U
	UpdateStudentName(ctx context.Context, arg UpdateStudentNameParams) error
}

var _ Querier = (*Queries)(nil)
